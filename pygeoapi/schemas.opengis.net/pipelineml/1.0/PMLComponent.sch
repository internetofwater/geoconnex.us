<?xml version="1.0" encoding="UTF-8"?><schema xmlns="http://purl.oclc.org/dsdl/schematron" xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
  <!--
        This Schematron schema checks that the type of the observation result is correct.

        OGC PipelineML Conceptual and Encoding Model Standard 1.0 is an OGC Standard.
        Copyright (c) 2020 Open Geospatial Consortium.
        To obtain additional rights of use, visit http://www.ogc.org/legal/ .

        version="1.0.1"
    -->
  <title>Schematron constraints for schema 'PMLComponent'</title>
  <ns prefix="sch" uri="http://purl.oclc.org/dsdl/schematron"/>
  <ns prefix="pml" uri="http://www.opengis.net/pipelineml/1.0"/>
  <ns prefix="xlink" uri="http://www.w3.org/1999/xlink"/>
  <ns prefix="gml" uri="http://www.opengis.net/gml/3.2"/>
  <pattern>
    <rule context="pml:Assembly/pml:assemblyBoundType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblyboundtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblyboundtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Assembly/pml:assemblyClassification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblyclassification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblyclassification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Assembly/pml:assemblyType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblytype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblytype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Assembly/pml:assemblySubType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblysubtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/assemblysubtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/captype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/captype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capmaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capmaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capWeight">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capweight/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capweight/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capbounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capbounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capnominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capnominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capOutsideDiameter">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capoutsidediameter/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capoutsidediameter/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Cap/pml:capWallThickness">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/capwallthickness/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/capwallthickness/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingCrossingType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingcrossingtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingcrossingtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingmaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingmaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingGrade">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casinggrade/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casinggrade/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingYieldStrength">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingyieldstrength/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingyieldstrength/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingbounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingbounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingnominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingnominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingOutsideDiameter">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingoutsidediameter/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingoutsidediameter/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingWallThickness">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingwallthickness/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingwallthickness/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingAnnulusType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingannulustype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingannulustype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingInsulatorType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casinginsulatortype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casinginsulatortype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Casing/pml:casingSealType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/casingseamtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/casingseamtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingmaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingmaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingBoundManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingboundmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingboundmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingProductName">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingproductname/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingproductname/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingModelNumber">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingmodelnumber/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingmodelnumber/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingThickness">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingthickness/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingthickness/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Coating/pml:coatingApplicationLocation">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingapplicationlocation/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/coatingapplicationlocation/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Collection/pml:collectionBoundType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/collectionboundtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/collectionboundtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Collection/pml:collectionClassification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/collectionclassification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/collectionclassification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Collection/pml:collectionType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/collectiontype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/collectiontype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Collection/pml:collectionSubType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/collectionsubtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/collectionsubtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressormanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressormanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressortype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressortype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorBoundType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorboundtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorboundtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorStage">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorstage/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorstage/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorThrow">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorthrow/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorthrow/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorStroke">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorstroke/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorstroke/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressornominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressornominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorBoundManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorboundmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorboundmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorProductName">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorproductname/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorproductname/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorModelNumber">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressormodelnumber/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressormodelnumber/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Compressor/pml:compressorFuelType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorfueltype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/compressorfueltype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowmaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowmaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowWeight">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowweight/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowweight/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowbounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowbounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowAngle">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowangle/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowangle/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbownominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbownominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowOutsideDiameter">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowoutsidediameter/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowoutsidediameter/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Elbow/pml:elbowWallThickness">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowwallthickness/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/elbowwallthickness/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangemanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangemanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangetype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangetype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangematerial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangematerial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangeboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangeboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangespecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangespecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeClass">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangeclass/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangeclass/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangenominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangenominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Flange/pml:flangeInsulationType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/flangeinsulationtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/flangeinsulationtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivermanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivermanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivertype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivertype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverBoundManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceiverboundmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceiverboundmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivernominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivernominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverProductName">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceiverproductname/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceiverproductname/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverModelNumber">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivermodelnumber/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceivermodelnumber/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Launcherreceiver/pml:launcherreceiverClass">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceiverclass/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/launcherreceiverclass/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipemanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipemanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipetype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipetype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipematerial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipematerial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipespecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipespecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeYieldStrength">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeyieldstrength/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeyieldstrength/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeGrade">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipegrade/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipegrade/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipebounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipebounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipenominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipenominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeOutsideDiameter">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeoutsidediameter/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeoutsidediameter/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeWallThickness">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeoutsidediameter/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeoutsidediameter/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeBendType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipebendtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipebendtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipeSeamWeldType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeseamweldtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeseamweldtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Linepipe/pml:linepipePositionVertical">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipepositionvertical/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipepositionvertical/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:LinepipeSeamWeldOrientationType/pml:OrientationAngle">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeseamweldorientation/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/linepipeseamweldorientation/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Meter/pml:meterManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/metermanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/metermanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Meter/pml:meterType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/metertype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/metertype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Meter/pml:meterNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/meternominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/meternominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Meter/pml:meterBoundManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/meterboundmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/meterboundmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Meter/pml:meterProductName">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/meterproductname/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/meterproductname/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Meter/pml:meterModelNumber">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/metermodelnumber/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/metermodelnumber/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeconnector/pml:pipeconnectorManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectormanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectormanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeconnector/pml:pipeconnectorType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectortype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectortype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeconnector/pml:pipeconnectorMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectormaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectormaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeconnector/pml:pipeconnectorBoundType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectorboundtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectorboundtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeconnector/pml:pipeconnectorSubType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectorsubtype.com')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipeconnectorsubtype.com'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeline/pml:pipelineBoundType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelineboundtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelineboundtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeline/pml:pipelineClassification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelineclassification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelineclassification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeline/pml:pipelineType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelinetype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelinetype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pipeline/pml:pipelineSubType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelinesubtype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pipelinesubtype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumptype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumptype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpbounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpbounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpDiameterOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpdiameteroutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpdiameteroutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpDiameterInlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpdiameterinlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpdiameterinlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpDiameterImpeller">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpdiameterimpeller/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpdiameterimpeller/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpBoundManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpProductName">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpproductname/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpproductname/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpModelNumber">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpmodelnumber/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpmodelnumber/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Pump/pml:pumpFuelType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpfueltype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/pumpfueltype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducermanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducermanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducertype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducertype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducermaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducermaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerWeight">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerweight/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerweight/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerbounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerbounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerNominalPipeSizeInlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducernominalpipesizeinlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducernominalpipesizeinlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerNominalPipeSizeOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducernominalpipesizeoutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducernominalpipesizeoutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerOutsideDiameterInlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reduceroutsidediameterinlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reduceroutsidediameterinlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerOutsideDiameterOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reduceroutsidediameteroutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reduceroutsidediameteroutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerWallThicknessInlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerwallthicknessinlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerwallthicknessinlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Reducer/pml:reducerWallThicknessOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerwallthicknessoutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/reducerwallthicknessoutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevemanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevemanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevetype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevetype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevematerial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevematerial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevebounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevebounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevenominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevenominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveWallThickness">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevewallthickness/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevewallthickness/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveBoundManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleeveboundmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleeveboundmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveProductName">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleeveproductname/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleeveproductname/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Sleeve/pml:sleeveModelNumber">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevemodelnumber/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/sleevemodelnumber/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapmanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapmanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/taptype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/taptype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapmaterial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapmaterial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapbounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapbounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapnominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapnominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapOutsideDiameterInlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapoutsidediameterinlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapoutsidediameterinlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapOutsideDiameterOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapoutsidediameteroutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapoutsidediameteroutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapFunction">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapfunction/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapfunction/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tap/pml:tapInstallMethod">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/tapinstallmethod/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/tapinstallmethod/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teemanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teemanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teetype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teetype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeMaterial">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teematerial/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teematerial/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teeboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teeboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teespecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teespecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeWeight">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teeweight/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teeweight/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeBoundDimension">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teebounddimension/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teebounddimension/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teenominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teenominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeOutsideDiameterRun">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teeoutsidediameterrun/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teeoutsidediameterrun/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeOutsideDiameterOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teeoutsidediameteroutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teeoutsidediameteroutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeWallThicknessRun">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teewallthicknessrun/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teewallthicknessrun/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Tee/pml:teeWallThicknessOutlet">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/teewallthicknessoutlet/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/teewallthicknessoutlet/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveManufacturer">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valvemanufacturer/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valvemanufacturer/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valvetype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valvetype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveBoundSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valveboundspecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valveboundspecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveSpecification">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valvespecification/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valvespecification/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveClass">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valveclass/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valveclass/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveNominalPipeSize">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valvenominalpipesize/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valvenominalpipesize/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveOperability">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valveoperability/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valveoperability/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Valve/pml:valveFunctionType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valvefunctiontype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valvefunctiontype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
    <rule context="pml:Virtualconnector/pml:virtualconnectorType">
      <assert test="every $clValueUri in @xlink:href satisfies starts-with(@xlink:href,'https://www.opengis.net/def/pipelineml/1.0/codelists/valveconnectortype/')">Code list value URI shall start with 'https://www.opengis.net/def/pipelineml/1.0/codelists/valveconnectortype/'</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall exist</assert>
      <assert test="every $clValueUri in @xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and doc-available(substring-before($clValueUri,'#')) and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value shall be represented using GML 3.2 (gml:Definition)</assert>
    </rule>
  </pattern>
</schema>
