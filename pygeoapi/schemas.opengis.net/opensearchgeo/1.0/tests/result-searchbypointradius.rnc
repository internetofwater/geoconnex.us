# -*- rnc -*-
# Test Purpose:	Verify that the server conforms to the Point and Radius Search conformance class.   
namespace os = "http://a9.com/-/spec/opensearch/1.1/"
namespace s = "http://purl.oclc.org/dsdl/schematron"
namespace local = ""
namespace geo = "http://a9.com/-/opensearch/extensions/geo/1.0/"

include "../schemas/geo.rnc"

include "../schemas/osdd.rnc"{

	undefinedAttribute = attribute * - (local:* | geo:* ) { text }

	osDocument = [ 
	 	s:pattern [  name="Check for Atom Url template" 
	 		s:rule [ context = "os:OpenSearchDescription"
              s:assert [ test = "os:Url[@type='application/atom+xml']"
               "An OpenSearch Description Document must have a Url template with "
               ~ " type of ATOM document." ]]]
               
        s:pattern [  name="Check for radius parameters"    
                s:rule [ context = "os:OpenSearchDescription"
              s:assert [ test = "os:Url[@type='application/atom+xml'][substring-before(@template,'{geo:radius')!='']"
               "An OpenSearch Description Document must have at least a geo:radius parameter "
               ~ " in the ATOM response." ]]]
               
        s:pattern [  name="Check for lat parameters"    
                s:rule [ context = "os:OpenSearchDescription"
              s:assert [ test = "os:Url[@type='application/atom+xml'][substring-before(@template,'{geo:lat')!='']"
               "An OpenSearch Description Document must have at least a geo:lat parameter "
               ~ " in the ATOM response." ]]]

        s:pattern [  name="Check for lon parameters"    
                s:rule [ context = "os:OpenSearchDescription"
              s:assert [ test = "os:Url[@type='application/atom+xml'][substring-before(@template,'{geo:lon')!='']"
               "An OpenSearch Description Document must have at least a geo:lon parameter "
               ~ " in the ATOM response." ]]]

               ]
     		element os:OpenSearchDescription { osDocumentConstruct } 	
}
# EOF
